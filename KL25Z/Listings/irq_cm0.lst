


ARM Macro Assembler    Page 1 


    1 00000000         ;/*
    2 00000000         ; * Copyright (c) 2013-2017 ARM Limited. All rights rese
                       rved.
    3 00000000         ; *
    4 00000000         ; * SPDX-License-Identifier: Apache-2.0
    5 00000000         ; *
    6 00000000         ; * Licensed under the Apache License, Version 2.0 (the 
                       License); you may
    7 00000000         ; * not use this file except in compliance with the Lice
                       nse.
    8 00000000         ; * You may obtain a copy of the License at
    9 00000000         ; *
   10 00000000         ; * www.apache.org/licenses/LICENSE-2.0
   11 00000000         ; *
   12 00000000         ; * Unless required by applicable law or agreed to in wr
                       iting, software
   13 00000000         ; * distributed under the License is distributed on an A
                       S IS BASIS, WITHOUT
   14 00000000         ; * WARRANTIES OR CONDITIONS OF ANY KIND, either express
                        or implied.
   15 00000000         ; * See the License for the specific language governing 
                       permissions and
   16 00000000         ; * limitations under the License.
   17 00000000         ; *
   18 00000000         ; * ----------------------------------------------------
                       -------------------------
   19 00000000         ; *
   20 00000000         ; * Project:     CMSIS-RTOS RTX
   21 00000000         ; * Title:       Cortex-M0 Exception handlers
   22 00000000         ; *
   23 00000000         ; * ----------------------------------------------------
                       -------------------------
   24 00000000         ; */
   25 00000000         
   26 00000000         
   27 00000000 0000001C 
                       I_T_RUN_OFS
                               EQU              28          ; osRtxInfo.thread.
                                                            run offset
   28 00000000 00000038 
                       TCB_SP_OFS
                               EQU              56          ; TCB.SP offset
   29 00000000         
   30 00000000         
   31 00000000                 PRESERVE8
   32 00000000                 THUMB
   33 00000000         
   34 00000000         
   35 00000000                 AREA             |.constdata|, DATA, READONLY
   36 00000000                 EXPORT           irqRtxLib
   37 00000000 00      irqRtxLib
                               DCB              0           ; Non weak library 
                                                            reference
   38 00000001         
   39 00000001         
   40 00000001                 AREA             |.text|, CODE, READONLY
   41 00000000         
   42 00000000         
   43 00000000         SVC_Handler



ARM Macro Assembler    Page 2 


                               PROC
   44 00000000                 EXPORT           SVC_Handler
   45 00000000                 IMPORT           osRtxUserSVC
   46 00000000                 IMPORT           osRtxInfo
   47 00000000         
   48 00000000 F3EF 8009       MRS              R0,PSP      ; Get PSP
   49 00000004 6981            LDR              R1,[R0,#24] ; Load saved PC fro
                                                            m stack
   50 00000006 1E89            SUBS             R1,R1,#2    ; Point to SVC inst
                                                            ruction
   51 00000008 7809            LDRB             R1,[R1]     ; Load SVC number
   52 0000000A 2900            CMP              R1,#0
   53 0000000C D126            BNE              SVC_User    ; Branch if not SVC
                                                             0
   54 0000000E         
   55 0000000E B501            PUSH             {R0,LR}     ; Save PSP and EXC_
                                                            RETURN
   56 00000010 C80F            LDMIA            R0,{R0-R3}  ; Load function par
                                                            ameters from stack
   57 00000012 47B8            BLX              R7          ; Call service func
                                                            tion
   58 00000014 BC0C            POP              {R2,R3}     ; Restore PSP and E
                                                            XC_RETURN
   59 00000016 C203            STMIA            R2!,{R0-R1} ; Store function re
                                                            turn values
   60 00000018 469E            MOV              LR,R3       ; Set EXC_RETURN
   61 0000001A         
   62 0000001A         SVC_Context
   63 0000001A 4B1D            LDR              R3,=osRtxInfo+I_T_RUN_OFS ; Loa
                                                            d address of osRtxI
                                                            nfo.run
   64 0000001C CB06            LDMIA            R3!,{R1,R2} ; Load osRtxInfo.th
                                                            read.run: curr & ne
                                                            xt
   65 0000001E 4291            CMP              R1,R2       ; Check if thread s
                                                            witch is required
   66 00000020 D01B            BEQ              SVC_Exit    ; Branch when threa
                                                            ds are the same
   67 00000022         
   68 00000022 2900            CMP              R1,#0
   69 00000024 D009            BEQ              SVC_ContextSwitch ; Branch if r
                                                            unning thread is de
                                                            leted
   70 00000026         
   71 00000026         SVC_ContextSave
   72 00000026 F3EF 8009       MRS              R0,PSP      ; Get PSP
   73 0000002A 3820            SUBS             R0,R0,#32   ; Adjust address
   74 0000002C 6388            STR              R0,[R1,#TCB_SP_OFS] ; Store SP
   75 0000002E C0F0            STMIA            R0!,{R4-R7} ; Save R4..R7
   76 00000030 4644            MOV              R4,R8
   77 00000032 464D            MOV              R5,R9
   78 00000034 4656            MOV              R6,R10
   79 00000036 465F            MOV              R7,R11
   80 00000038 C0F0            STMIA            R0!,{R4-R7} ; Save R8..R11
   81 0000003A         
   82 0000003A         SVC_ContextSwitch
   83 0000003A 3B08            SUBS             R3,R3,#8
   84 0000003C 601A            STR              R2,[R3]     ; osRtxInfo.thread.
                                                            run: curr = next



ARM Macro Assembler    Page 3 


   85 0000003E         
   86 0000003E         SVC_ContextRestore
   87 0000003E 6B90            LDR              R0,[R2,#TCB_SP_OFS] ; Load SP
   88 00000040 3010            ADDS             R0,R0,#16   ; Adjust address
   89 00000042 C8F0            LDMIA            R0!,{R4-R7} ; Restore R8..R11
   90 00000044 46A0            MOV              R8,R4
   91 00000046 46A9            MOV              R9,R5
   92 00000048 46B2            MOV              R10,R6
   93 0000004A 46BB            MOV              R11,R7
   94 0000004C F380 8809       MSR              PSP,R0      ; Set PSP
   95 00000050 3820            SUBS             R0,R0,#32   ; Adjust address
   96 00000052 C8F0            LDMIA            R0!,{R4-R7} ; Restore R4..R7
   97 00000054         
   98 00000054 2002            MOVS             R0,#~0xFFFFFFFD
   99 00000056 43C0            MVNS             R0,R0       ; Set EXC_RETURN va
                                                            lue
  100 00000058 4700            BX               R0          ; Exit from handler
                                                            
  101 0000005A         
  102 0000005A         SVC_Exit
  103 0000005A 4770            BX               LR          ; Exit from handler
                                                            
  104 0000005C         
  105 0000005C         SVC_User
  106 0000005C B510            PUSH             {R4,LR}     ; Save registers
  107 0000005E 4A0D            LDR              R2,=osRtxUserSVC ; Load address
                                                             of SVC table
  108 00000060 6813            LDR              R3,[R2]     ; Load SVC maximum 
                                                            number
  109 00000062 4299            CMP              R1,R3       ; Check SVC number 
                                                            range
  110 00000064 D806            BHI              SVC_Done    ; Branch if out of 
                                                            range
  111 00000066         
  112 00000066 0089            LSLS             R1,R1,#2
  113 00000068 5854            LDR              R4,[R2,R1]  ; Load address of S
                                                            VC function
  114 0000006A         
  115 0000006A C80F            LDMIA            R0,{R0-R3}  ; Load function par
                                                            ameters from stack
  116 0000006C 47A0            BLX              R4          ; Call service func
                                                            tion
  117 0000006E F3EF 8409       MRS              R4,PSP      ; Get PSP
  118 00000072 C40F            STMIA            R4!,{R0-R3} ; Store function re
                                                            turn values
  119 00000074         
  120 00000074         SVC_Done
  121 00000074 BD10            POP              {R4,PC}     ; Return from handl
                                                            er
  122 00000076         
  123 00000076 00 00           ALIGN
  124 00000078                 ENDP
  125 00000078         
  126 00000078         
  127 00000078         PendSV_Handler
                               PROC
  128 00000078                 EXPORT           PendSV_Handler
  129 00000078                 IMPORT           osRtxPendSV_Handler
  130 00000078         



ARM Macro Assembler    Page 4 


  131 00000078 B501            PUSH             {R0,LR}     ; Save EXC_RETURN
  132 0000007A F7FF FFFE       BL               osRtxPendSV_Handler ; Call osRt
                                                            xPendSV_Handler
  133 0000007E BC03            POP              {R0,R1}     ; Restore EXC_RETUR
                                                            N
  134 00000080 468E            MOV              LR,R1       ; Set EXC_RETURN
  135 00000082 E7CA            B                SVC_Context
  136 00000084         
  137 00000084                 ALIGN
  138 00000084                 ENDP
  139 00000084         
  140 00000084         
  141 00000084         SysTick_Handler
                               PROC
  142 00000084                 EXPORT           SysTick_Handler
  143 00000084                 IMPORT           osRtxTick_Handler
  144 00000084         
  145 00000084 B501            PUSH             {R0,LR}     ; Save EXC_RETURN
  146 00000086 F7FF FFFE       BL               osRtxTick_Handler ; Call osRtxT
                                                            ick_Handler
  147 0000008A BC03            POP              {R0,R1}     ; Restore EXC_RETUR
                                                            N
  148 0000008C 468E            MOV              LR,R1       ; Set EXC_RETURN
  149 0000008E E7C4            B                SVC_Context
  150 00000090         
  151 00000090                 ALIGN
  152 00000090                 ENDP
  153 00000090         
  154 00000090         
  155 00000090                 END
              0000001C 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0+ --apcs=inter
work --depend=.\objects\irq_cm0.d -o.\objects\irq_cm0.o -I.\RTE\CMSIS -I.\RTE\D
evice\MKL25Z128xxx4 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMS
IS\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\Include -IC:\Keil_
v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Include -IC:\Keil_v5\ARM\PACK\Keil\
Kinetis_KLxx_DFP\1.15.0\Device\Include --predefine="__EVAL SETA 1" --predefine=
"__UVISION_VERSION SETA 523" --predefine="_RTE_ SETA 1" --predefine="MKL25Z128x
xx4 SETA 1" --list=.\listings\irq_cm0.lst C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\C
MSIS\RTOS2\RTX\Source\ARM\irq_cm0.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.constdata 00000000

Symbol: .constdata
   Definitions
      At line 35 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      None
Comment: .constdata unused
irqRtxLib 00000000

Symbol: irqRtxLib
   Definitions
      At line 37 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      At line 36 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
Comment: irqRtxLib used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 40 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000078

Symbol: PendSV_Handler
   Definitions
      At line 127 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
   Uses
      At line 128 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
Comment: PendSV_Handler used once
SVC_Context 0000001A

Symbol: SVC_Context
   Definitions
      At line 62 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      At line 135 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
      At line 149 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s

SVC_ContextRestore 0000003E

Symbol: SVC_ContextRestore
   Definitions
      At line 86 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      None
Comment: SVC_ContextRestore unused
SVC_ContextSave 00000026

Symbol: SVC_ContextSave
   Definitions
      At line 71 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      None
Comment: SVC_ContextSave unused
SVC_ContextSwitch 0000003A

Symbol: SVC_ContextSwitch
   Definitions
      At line 82 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      At line 69 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
Comment: SVC_ContextSwitch used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

SVC_Done 00000074

Symbol: SVC_Done
   Definitions
      At line 120 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
   Uses
      At line 110 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
Comment: SVC_Done used once
SVC_Exit 0000005A

Symbol: SVC_Exit
   Definitions
      At line 102 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
   Uses
      At line 66 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
Comment: SVC_Exit used once
SVC_Handler 00000000

Symbol: SVC_Handler
   Definitions
      At line 43 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      At line 44 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
Comment: SVC_Handler used once
SVC_User 0000005C

Symbol: SVC_User
   Definitions
      At line 105 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
   Uses
      At line 53 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
Comment: SVC_User used once
SysTick_Handler 00000084

Symbol: SysTick_Handler
   Definitions
      At line 141 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
   Uses
      At line 142 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
Comment: SysTick_Handler used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

I_T_RUN_OFS 0000001C

Symbol: I_T_RUN_OFS
   Definitions
      At line 27 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      At line 63 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
Comment: I_T_RUN_OFS used once
TCB_SP_OFS 00000038

Symbol: TCB_SP_OFS
   Definitions
      At line 28 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      At line 74 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
      At line 87 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

osRtxInfo 00000000

Symbol: osRtxInfo
   Definitions
      At line 46 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      At line 63 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
Comment: osRtxInfo used once
osRtxPendSV_Handler 00000000

Symbol: osRtxPendSV_Handler
   Definitions
      At line 129 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
   Uses
      At line 132 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
Comment: osRtxPendSV_Handler used once
osRtxTick_Handler 00000000

Symbol: osRtxTick_Handler
   Definitions
      At line 143 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
   Uses
      At line 146 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
Comment: osRtxTick_Handler used once
osRtxUserSVC 00000000

Symbol: osRtxUserSVC
   Definitions
      At line 45 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\So
urce\ARM\irq_cm0.s
   Uses
      At line 107 in file C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\S
ource\ARM\irq_cm0.s
Comment: osRtxUserSVC used once
4 symbols
355 symbols in table
